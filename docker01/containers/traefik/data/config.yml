http:
 #region routers
  routers:
    proxmox:
      entryPoints:
        - "https"
      rule: "Host(`proxmox.local.asuras.network`)"
      middlewares:
        - default-headers
      tls: {}
      service: proxmox
    pve1:
      entryPoints:
        - "https"
      rule: "Host(`pve1.local.asuras.network`)"
      middlewares:
        - default-headers
      tls: {}
      service: pve1
    pve2:
      entryPoints:
        - "https"
      rule: "Host(`pve2.local.asuras.network`)"
      middlewares:
        - default-headers
      tls: {}
      service: pve2
    fritzbox:
      entryPoints:
        - "https"
      rule: "Host(`fritzbox.local.asuras.network`)"
      middlewares:
        - default-headers
      tls: {}
      service: fritzbox
    pihole:
      entryPoints:
        - "https"
      rule: "Host(`pihole.local.asuras.network`)"
      middlewares:
        - default-headers
        - addprefix-pihole
      tls: {}
      service: pihole
    devstation:
      entryPoints:
        - "https"
      rule: "Host(`devstation.local.asuras.network`)"
      middlewares:
        - default-headers
      tls: {}
      service: devstation

#endregion
#region services
  services:
    proxmox:
      loadBalancer:
        servers:
          - url: "https://172.30.31.2:8006"
        passHostHeader: true
    pve1:
      loadBalancer:
        servers:
          - url: "https://172.30.31.2:8006"
        passHostHeader: true
    pve2:
      loadBalancer:
        servers:
          - url: "https://172.30.31.3:8006"
        passHostHeader: true
    pihole:
      loadBalancer:
        servers:
          - url: "http://172.30.31.254:80"
        passHostHeader: true
    fritzbox:
      loadBalancer:
        servers:
          - url: "https://fritz.box"
        passHostHeader: true
    devstation:
      loadBalancer:
        servers:
          - url: "https://172.30.30.51:10000"
        passHostHeader: true


#endregion
  middlewares:
    addprefix-pihole:
      addPrefix:
        prefix: "/admin"
    https-redirect:
      redirectScheme:
        scheme: https

    default-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    default-whitelist:
      ipWhiteList:
        sourceRange:
        - "172.30.30.0/24"
        - "172.30.31.0/24"

    secured:
      chain:
        middlewares:
        - default-whitelist
