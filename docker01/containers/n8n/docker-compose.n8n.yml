version: '3.1'

services:

  postgres:
    image: postgres:${TAGPOSTGRESN8N}
    container_name: ${CONTAINERNAMEPOSTGRESN8N}
    restart: always
    environment:
      - POSTGRES_USER=${USERPOSTRGESN8N}
      - POSTGRES_PASSWORD=${PASSWORDPOSTGRESN8N}
      - POSTGRES_DB=${DBPOSTGRESN8N}
      - POSTGRES_NON_ROOT_USER=${NONROOTUSERPOSTGRESN8N}
      - POSTGRES_NON_ROOT_PASSWORD=${NONROOTPASSWORDPOSTGRESN8N}
    volumes:
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - n8n_bridge

  n8n:
    image: n8nio/n8n:${TAGN8N}
    container_name: ${CONTAINERNAMEN8N}
    env_file:
      - ../.env
      - .env-overwrite
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${DBPOSTGRESN8N}
      - DB_POSTGRESDB_USER=${NONROOTUSERPOSTGRESN8N}
      - DB_POSTGRESDB_PASSWORD=${NONROOTPASSWORDPOSTGRESN8N}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - ./data/n8n/:/home/node/.n8n
    networks:
      - traefik
      - n8n_bridge
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICEN8N}.entrypoints=http"
      - "traefik.http.routers.${SERVICEN8N}.rule=Host(`${SERVICEN8N}.${FQDN}`)"
      - "traefik.http.middlewares.${SERVICEN8N}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.${SERVICEN8N}.middlewares=${SERVICE.N8N}-https-redirect"
      - "traefik.http.routers.${SERVICEN8N}-secure.entrypoints=https"
      - "traefik.http.routers.${SERVICEN8N}-secure.rule=Host(`${SERVICEN8N}.${FQDN}`)"
      - "traefik.http.routers.${SERVICEN8N}-secure.tls=true"
      - "traefik.docker.network=traefik"
      - "flame.type=application"
      - "flame.name=N8N"
      - "flame.url=${SERVIVCEN8N}.${FQDN}"
      - "flame.icon=home-automation"
    # Wait 5 seconds to start n8n to make sure that PostgreSQL is ready
    # when n8n tries to connect to it
    command: /bin/sh -c "sleep 5; n8n start"

networks:
  traefik:
    external: true
  n8n_bridge:
    driver: bridge
